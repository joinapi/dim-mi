<data disableLegacyBoxcarringMode="true" enableBatchRequests="true" enableBoxcarring="true" name="DSSCallMediatorTest" transports="http https local">
      <config enableOData="false" id="01">
         <property name="org.wso2.ws.dataservice.driver">org.h2.Driver</property>
         <property name="org.wso2.ws.dataservice.protocol">jdbc:h2:file:./../../h2DataBase/testdb_for_DSSCallMediatorTestCase</property>
         <property name="org.wso2.ws.dataservice.user">wso2carbon</property>
         <property name="org.wso2.ws.dataservice.password">wso2carbon</property>
         <property name="org.wso2.ws.dataservice.minpoolsize">1</property>
         <property name="org.wso2.ws.dataservice.maxpoolsize">10</property>
         <property name="org.wso2.ws.dataservice.autocommit">false</property>
         <property name="org.wso2.ws.dataservice.validation_query"/>
      </config>
   <query id="getEmployeeByNumberQuery" useConfig="01">
      <sql>select EmployeeNumber, FirstName, LastName, Email, Salary from Employees where EmployeeNumber=:EmployeeNumber</sql>
      <result element="Entries" rowName="Entry">
         <element column="EmployeeNumber" name="EmployeeNumber" xsdType="string"/>
         <element column="FirstName" name="FirstName" xsdType="string"/>
         <element column="LastName" name="LastName" xsdType="string"/>
         <element column="Email" name="Email" xsdType="string"/>
         <element column="Salary" name="Salary" xsdType="string"/>
      </result>
      <param name="EmployeeNumber" sqlType="STRING"/>
   </query>
   <query id="getEmptyEmployeeListQuery" useConfig="01">
         <sql>select NAME from EMPLOYEESWITHEMPTYDATA</sql>
         <result element="Entries" rowName="Entry">
               <element name="NAME" column="NAME" xsdType="string" />
         </result>
      </query>
   <query id="addEmployeeQuery" useConfig="01">
      <sql>insert into Employees (EmployeeNumber, FirstName, LastName, Email, Salary) values(:EmployeeNumber,:FirstName,:LastName,:Email,:Salary)</sql>
      <param name="EmployeeNumber" sqlType="STRING"/>
      <param name="FirstName" sqlType="STRING"/>
      <param name="LastName" sqlType="STRING"/>
      <param name="Email" sqlType="STRING"/>
      <param name="Salary" sqlType="STRING"/>
   </query>
   <operation name="addEmployee" returnRequestStatus="true">
      <call-query href="addEmployeeQuery">
         <with-param name="EmployeeNumber" query-param="EmployeeNumber"/>
         <with-param name="FirstName" query-param="FirstName"/>
         <with-param name="LastName" query-param="LastName"/>
         <with-param name="Email" query-param="Email"/>
         <with-param name="Salary" query-param="Salary"/>
      </call-query>
   </operation>
   <operation name="getEmployeeByNumber">
      <call-query href="getEmployeeByNumberQuery">
         <with-param name="EmployeeNumber" query-param="EmployeeNumber"/>
      </call-query>
   </operation>
   <operation name="getEmptyEmployeeList">
         <call-query href="getEmptyEmployeeListQuery">
         </call-query>
   </operation>
   <resource method="GET" path="Employee/{EmployeeNumber}">
      <call-query href="getEmployeeByNumberQuery">
         <with-param name="EmployeeNumber" query-param="EmployeeNumber"/>
      </call-query>
   </resource>
   <resource method="POST" path="/Employee">
      <call-query href="addEmployeeQuery">
         <with-param name="EmployeeNumber" query-param="EmployeeNumber"/>
         <with-param name="FirstName" query-param="FirstName"/>
         <with-param name="LastName" query-param="LastName"/>
         <with-param name="Email" query-param="Email"/>
         <with-param name="Salary" query-param="Salary"/>
      </call-query>
   </resource>
</data>

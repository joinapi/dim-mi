<!--
  ~ Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
  ~
  ~ WSO2 Inc. licenses this file to you under the Apache License,
  ~ Version 2.0 (the "License"); you may not use this file except
  ~ in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied. See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  ~
  -->

<api xmlns="http://ws.apache.org/ns/synapse" name="TestForEachMediatorNativeJson" context="/foreachsample">
    <resource methods="POST" uri-template="/foreachjson1">
        <inSequence>
            <foreach id="foreach1" expression="json-eval($.students.studentlist)">
                <sequence>
                    <payloadFactory media-type="json">
                        <format>                  {"candidate" : $1}              </format>
                        <args>
                            <arg evaluator="json" expression="$"/>
                        </args>
                    </payloadFactory>
                </sequence>
            </foreach>
            <respond/>
        </inSequence>
    </resource>
    <resource methods="POST" uri-template="/foreachjson2">
        <inSequence>
            <payloadFactory media-type="json">
                <format>{
                    "getQuote": ["check", {"hello" : "world"}, true, 1]}</format>
            </payloadFactory>
            <foreach id="foreach2" expression="json-eval($.getQuote)">
                <sequence>
                    <log level="full"/>
                </sequence>
            </foreach>
            <respond/>
        </inSequence>
    </resource>
    <resource methods="POST" uri-template="/foreachjson3">
        <inSequence>
            <foreach id="foreach3" expression="json-eval($)">
                <sequence>
                    <payloadFactory media-type="json">
                        <format>                  {"candidate" : $1}              </format>
                        <args>
                            <arg evaluator="json" expression="$"/>
                        </args>
                    </payloadFactory>
                </sequence>
            </foreach>
            <respond/>
        </inSequence>
        <outSequence/>
        <faultSequence/>
    </resource>
</api>
